#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'bomberMan' function below.
#
# The function is expected to return a STRING_ARRAY.
# The function accepts following parameters:
#  1. INTEGER n
#  2. STRING_ARRAY grid
#

def bomberMan(o, grid):
    if o==1:
        return grid
    n,m=len(grid),len(grid[0])
    ng=[["O"]*m for i in range(n)]
    if o%2==0:
        return ng
    p1,p2=[],[]
    for i in range(n):
        for j in range(m):
            if grid[i][j]=="O":
                ng[i][j]="."
                if i+1<n:
                    ng[i+1][j]="."
                if j+1<m:
                    ng[i][j+1]="."
                if i-1>-1:
                    ng[i-1][j]="."
                if j-1>-1:
                    ng[i][j-1]="."
    p1=ng.copy()
    ng=[["O"]*m for i in range(n)]
    for i in range(n):
        for j in range(m):
            if p1[i][j]=="O":
                ng[i][j]="."
                if i+1<n:
                    ng[i+1][j]="."
                if j+1<m:
                    ng[i][j+1]="."
                if i-1>-1:
                    ng[i-1][j]="."
                if j-1>-1:
                    ng[i][j-1]="."
    p2=ng.copy()
    p=((o-1)//2)%2
    if p==1:
        return p1
    else:
        return p2
    # Write your code here

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    first_multiple_input = input().rstrip().split()

    r = int(first_multiple_input[0])

    c = int(first_multiple_input[1])

    n = int(first_multiple_input[2])

    grid = []

    for _ in range(r):
        grid_item = input()
        grid.append(grid_item)

    result = bomberMan(n, grid)

    fptr.write('\n'.join(''.join(row) if isinstance(row, list) else row for row in result))

    fptr.write('\n')

    fptr.close()
